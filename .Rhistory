View(bingo_items)
bingo_items <- read_csv("DATA/bingo_items.csv") %>%
mutate(id = row_number(),
x = ceiling(id / 5),
y = id %% 5,
image_url = if_else(id = 12, NA, image_url)) %>%
filter(id <= 25)
bingo_items <- read_csv("DATA/bingo_items.csv") %>%
mutate(id = row_number(),
x = ceiling(id / 5),
y = id %% 5,
image_url = if_else(id == 12, NA, image_url)) %>%
filter(id <= 25)
bingo_items <- read_csv("DATA/bingo_items.csv") %>%
mutate(id = row_number(),
x = ceiling(id / 5),
y = id %% 5,
image_url = if_else(id == 12, NA_character_, image_url)) %>%
filter(id <= 25)
ggplot(bingo_items, aes(x = x, y = y)) +
#geom_text(aes(label = item)) +
geom_image(aes(image = image_url), size = 0.18) +
scale_x_continuous(limits = c(0.8, 5.8)) +
scale_y_continuous(limits = c(-0.8, 4.8)) +
geom_vline(aes(xintercept = 4.5)) +
geom_vline(aes(xintercept = 1.5)) +
geom_vline(aes(xintercept = 2.5)) +
geom_vline(aes(xintercept = 3.5)) +
theme_void()
bingo_items <- read_csv("DATA/bingo_items.csv") %>%
mutate(id = row_number(),
x = ceiling(id / 5),
y = id %% 5,
image_url = if_else(id == 12, NA_character_, image_url),
free = if_else(id == 12, "FREE", NA_character_)) %>%
filter(id <= 25)
ggplot(bingo_items, aes(x = x, y = y)) +
geom_text(aes(label = free)) +
geom_image(aes(image = image_url), size = 0.18) +
scale_x_continuous(limits = c(0.8, 5.8)) +
scale_y_continuous(limits = c(-0.8, 4.8)) +
geom_vline(aes(xintercept = 4.5)) +
geom_vline(aes(xintercept = 1.5)) +
geom_vline(aes(xintercept = 2.5)) +
geom_vline(aes(xintercept = 3.5)) +
theme_void()
ggplot(bingo_items, aes(x = x, y = y)) +
geom_text(aes(label = free)) +
geom_image(aes(image = image_url), size = 0.18) +
scale_x_continuous(limits = c(0.8, 5.8)) +
scale_y_continuous(limits = c(-0.8, 4.8)) +
geom_vline(aes(xintercept = 4.5)) +
geom_vline(aes(xintercept = 1.5)) +
geom_vline(aes(xintercept = 2.5)) +
geom_vline(aes(xintercept = 3.5)) +
geom_hline(aes(xintercept = 0.5)) +
geom_hline(aes(xintercept = 1.5)) +
geom_hline(aes(xintercept = 2.5)) +
geom_hline(aes(xintercept = 3.5)) +
theme_void()
ggplot(bingo_items, aes(x = x, y = y)) +
geom_text(aes(label = free)) +
geom_image(aes(image = image_url), size = 0.18) +
scale_x_continuous(limits = c(0.8, 5.8)) +
scale_y_continuous(limits = c(-0.8, 4.8)) +
geom_vline(aes(xintercept = 4.5)) +
geom_vline(aes(xintercept = 1.5)) +
geom_vline(aes(xintercept = 2.5)) +
geom_vline(aes(xintercept = 3.5)) +
geom_hline(aes(yintercept = 0.5)) +
geom_hline(aes(yintercept = 1.5)) +
geom_hline(aes(yintercept = 2.5)) +
geom_hline(aes(yintercept = 3.5)) +
theme_void()
ggplot(bingo_items, aes(x = x, y = y)) +
geom_text(aes(label = free)) +
geom_image(aes(image = image_url), size = 0.18) +
scale_x_continuous(limits = c(0.8, 5.8)) +
scale_y_continuous(limits = c(-0.8, 4.8)) +
geom_vline(aes(xintercept = 4.5)) +
geom_vline(aes(xintercept = 1.5)) +
geom_vline(aes(xintercept = 2.5)) +
geom_vline(aes(xintercept = 3.5)) +
geom_hline(aes(yintercept = 0.5)) +
geom_hline(aes(yintercept = 1.5)) +
geom_hline(aes(yintercept = 2.5)) +
geom_hline(aes(yintercept = 3.5)) +
theme_void() +
theme(axis.line = element_line())
ggplot(bingo_items, aes(x = x, y = y)) +
geom_text(aes(label = free)) +
geom_image(aes(image = image_url), size = 0.15) +
scale_x_continuous(limits = c(0.5, 5.5)) +
scale_y_continuous(limits = c(-0.8, 4.8)) +
geom_vline(aes(xintercept = 4.5)) +
geom_vline(aes(xintercept = 1.5)) +
geom_vline(aes(xintercept = 2.5)) +
geom_vline(aes(xintercept = 3.5)) +
geom_hline(aes(yintercept = 0.5)) +
geom_hline(aes(yintercept = 1.5)) +
geom_hline(aes(yintercept = 2.5)) +
geom_hline(aes(yintercept = 3.5)) +
theme_void() +
theme(axis.line = element_line())
bingo_items <- read_csv("DATA/bingo_items.csv") %>%
mutate(id = row_number(),
x = ceiling(id / 5),
y = id %% 5 - 0.2,
image_url = if_else(id == 12, NA_character_, image_url),
free = if_else(id == 12, "FREE", NA_character_)) %>%
filter(id <= 25)
bingo_items <- read_csv("DATA/bingo_items.csv") %>%
mutate(id = row_number(),
x = ceiling(id / 5),
y = id %% 5 - 0.2,
image_url = if_else(id == 12, NA_character_, image_url),
free = if_else(id == 12, "FREE", NA_character_)) %>%
filter(id <= 25)
ggplot(bingo_items, aes(x = x, y = y)) +
geom_text(aes(label = free)) +
geom_image(aes(image = image_url), size = 0.15) +
scale_x_continuous(limits = c(0.5, 5.5)) +
scale_y_continuous(limits = c(-0.8, 4.8)) +
geom_vline(aes(xintercept = 4.5)) +
geom_vline(aes(xintercept = 1.5)) +
geom_vline(aes(xintercept = 2.5)) +
geom_vline(aes(xintercept = 3.5)) +
geom_hline(aes(yintercept = 0.5)) +
geom_hline(aes(yintercept = 1.5)) +
geom_hline(aes(yintercept = 2.5)) +
geom_hline(aes(yintercept = 3.5)) +
theme_void() +
theme(axis.line = element_line())
ggplot(bingo_items, aes(x = x, y = y)) +
geom_text(aes(label = free)) +
geom_image(aes(image = image_url), size = 0.15) +
scale_x_continuous(limits = c(0.5, 5.5)) +
scale_y_continuous(limits = c(-0.8, 4.8)) +
geom_vline(aes(xintercept = 4.5)) +
geom_vline(aes(xintercept = 1.5)) +
geom_vline(aes(xintercept = 2.5)) +
geom_vline(aes(xintercept = 3.5)) +
geom_hline(aes(yintercept = 0.5)) +
geom_hline(aes(yintercept = 1.5)) +
geom_hline(aes(yintercept = 2.5)) +
geom_hline(aes(yintercept = 3.5)) +
theme_void() +
theme(panel.border = element_rect(colour = "black", fill=NA, size=3))
bingo_items <- read_csv("DATA/bingo_items.csv") %>%
mutate(id = row_number(),
x = ceiling(id / 5),
y = id %% 5,
image_url = if_else(id == 12, NA_character_, image_url),
free = if_else(id == 12, "FREE", NA_character_)) %>%
filter(id <= 25)
ggplot(bingo_items, aes(x = x, y = y)) +
geom_text(aes(label = free)) +
geom_image(aes(image = image_url), size = 0.15) +
scale_x_continuous(limits = c(0.5, 5.5)) +
scale_y_continuous(limits = c(-0.8, 4.8)) +
geom_vline(aes(xintercept = 4.5)) +
geom_vline(aes(xintercept = 1.5)) +
geom_vline(aes(xintercept = 2.5)) +
geom_vline(aes(xintercept = 3.5)) +
geom_hline(aes(yintercept = 0.5)) +
geom_hline(aes(yintercept = 1.5)) +
geom_hline(aes(yintercept = 2.5)) +
geom_hline(aes(yintercept = 3.5)) +
theme_void() +
theme(panel.border = element_rect(colour = "black", fill=NA, size=3))
ggplot(bingo_items, aes(x = x, y = y)) +
geom_text(aes(label = free)) +
geom_image(aes(image = image_url), size = 0.15) +
scale_x_continuous(limits = c(0.5, 5.5)) +
scale_y_continuous(limits = c(-0.8, 4.8)) +
geom_vline(aes(xintercept = 4.5)) +
geom_vline(aes(xintercept = 1.5)) +
geom_vline(aes(xintercept = 2.5)) +
geom_vline(aes(xintercept = 3.5)) +
geom_hline(aes(yintercept = 0.5)) +
geom_hline(aes(yintercept = 1.5)) +
geom_hline(aes(yintercept = 2.5)) +
geom_hline(aes(yintercept = 3.5)) +
theme_void() +
theme(panel.border = element_rect(colour = "black", fill=NA, size=3)) +
ggtitle("Travel Bingo")
?sample
bingo_items <- read_csv("DATA/bingo_items.csv") %>%
mutate(id = sample(nrow(.)),
x = ceiling(id / 5),
y = id %% 5,
image_url = if_else(id == 12, NA_character_, image_url),
free = if_else(id == 12, "FREE", NA_character_)) %>%
filter(id <= 25)
ggplot(bingo_items, aes(x = x, y = y)) +
geom_text(aes(label = free)) +
geom_image(aes(image = image_url), size = 0.15) +
scale_x_continuous(limits = c(0.5, 5.5)) +
scale_y_continuous(limits = c(-0.8, 4.8)) +
geom_vline(aes(xintercept = 4.5)) +
geom_vline(aes(xintercept = 1.5)) +
geom_vline(aes(xintercept = 2.5)) +
geom_vline(aes(xintercept = 3.5)) +
geom_hline(aes(yintercept = 0.5)) +
geom_hline(aes(yintercept = 1.5)) +
geom_hline(aes(yintercept = 2.5)) +
geom_hline(aes(yintercept = 3.5)) +
theme_void() +
theme(panel.border = element_rect(colour = "black", fill=NA, size=3)) +
ggtitle("Travel Bingo")
ggplot(bingo_items, aes(x = x, y = y)) +
geom_text(aes(label = free)) +
geom_image(aes(image = image_url), size = 0.15) +
scale_x_continuous(limits = c(0.5, 5.5)) +
scale_y_continuous(limits = c(-0.8, 4.8)) +
geom_vline(aes(xintercept = 4.5)) +
geom_vline(aes(xintercept = 1.5)) +
geom_vline(aes(xintercept = 2.5)) +
geom_vline(aes(xintercept = 3.5)) +
geom_hline(aes(yintercept = 0.5)) +
geom_hline(aes(yintercept = 1.5)) +
geom_hline(aes(yintercept = 2.5)) +
geom_hline(aes(yintercept = 3.5)) +
theme_void() +
theme(panel.border = element_rect(colour = "black", fill=NA, size=3)) +
ggtitle("Travel Bingo\n")
bingo_items <- read_csv("DATA/bingo_items.csv") %>%
mutate(id = sample(nrow(.)),
x = ceiling(id / 5),
y = id %% 5,
image_url = if_else(id == 12, NA_character_, image_url),
free = if_else(id == 12, "FREE", NA_character_)) %>%
filter(id <= 25)
bingo_items <- read_csv("DATA/bingo_items.csv") %>%
mutate(id = sample(nrow(.)),
x = ceiling(id / 5),
y = id %% 5,
image_url = if_else(id == 12, NA_character_, image_url),
free = if_else(id == 12, "FREE", NA_character_)) %>%
filter(id <= 25)
# image = if_else(item == "motorcycle", paste0("IMAGES/", item, ".png")))
ggplot(bingo_items, aes(x = x, y = y)) +
geom_text(aes(label = free)) +
geom_image(aes(image = image_url), size = 0.15) +
scale_x_continuous(limits = c(0.5, 5.5)) +
scale_y_continuous(limits = c(-0.8, 4.8)) +
geom_vline(aes(xintercept = 4.5)) +
geom_vline(aes(xintercept = 1.5)) +
geom_vline(aes(xintercept = 2.5)) +
geom_vline(aes(xintercept = 3.5)) +
geom_hline(aes(yintercept = 0.5)) +
geom_hline(aes(yintercept = 1.5)) +
geom_hline(aes(yintercept = 2.5)) +
geom_hline(aes(yintercept = 3.5)) +
theme_void() +
theme(panel.border = element_rect(colour = "black", fill=NA, size=3)) +
ggtitle("Travel Bingo\n")
#take # of images square root, and use that as the grid, randomly choosing that many
ggplot(bingo_items, aes(x = x, y = y)) +
geom_text(aes(label = free)) +
geom_image(aes(image = image_url), size = 0.14) +
scale_x_continuous(limits = c(0.5, 5.5)) +
scale_y_continuous(limits = c(-0.8, 4.8)) +
geom_vline(aes(xintercept = 4.5)) +
geom_vline(aes(xintercept = 1.5)) +
geom_vline(aes(xintercept = 2.5)) +
geom_vline(aes(xintercept = 3.5)) +
geom_hline(aes(yintercept = 0.5)) +
geom_hline(aes(yintercept = 1.5)) +
geom_hline(aes(yintercept = 2.5)) +
geom_hline(aes(yintercept = 3.5)) +
theme_void() +
theme(panel.border = element_rect(colour = "black", fill=NA, size=3)) +
ggtitle("Travel Bingo\n")
ggplot(bingo_items, aes(x = x, y = y)) +
geom_text(aes(label = free)) +
geom_image(aes(image = image_url), size = 0.12) +
scale_x_continuous(limits = c(0.5, 5.5)) +
scale_y_continuous(limits = c(-0.8, 4.8)) +
geom_vline(aes(xintercept = 4.5)) +
geom_vline(aes(xintercept = 1.5)) +
geom_vline(aes(xintercept = 2.5)) +
geom_vline(aes(xintercept = 3.5)) +
geom_hline(aes(yintercept = 0.5)) +
geom_hline(aes(yintercept = 1.5)) +
geom_hline(aes(yintercept = 2.5)) +
geom_hline(aes(yintercept = 3.5)) +
theme_void() +
theme(panel.border = element_rect(colour = "black", fill=NA, size=3)) +
ggtitle("Travel Bingo\n")
bingo_items <- read_csv("DATA/bingo_items.csv") %>%
mutate(id = sample(nrow(.)),
x = ceiling(id / 5),
y = id %% 5,
image_url = if_else(id == 12, NA_character_, image_url),
free = if_else(id == 12, "FREE", NA_character_)) %>%
filter(id <= 25)
ggplot(bingo_items, aes(x = x, y = y)) +
geom_text(aes(label = free)) +
geom_image(aes(image = image_url), size = 0.12) +
scale_x_continuous(limits = c(0.5, 5.5)) +
scale_y_continuous(limits = c(-0.8, 4.8)) +
geom_vline(aes(xintercept = 4.5)) +
geom_vline(aes(xintercept = 1.5)) +
geom_vline(aes(xintercept = 2.5)) +
geom_vline(aes(xintercept = 3.5)) +
geom_hline(aes(yintercept = 0.5)) +
geom_hline(aes(yintercept = 1.5)) +
geom_hline(aes(yintercept = 2.5)) +
geom_hline(aes(yintercept = 3.5)) +
theme_void() +
theme(panel.border = element_rect(colour = "black", fill=NA, size=3)) +
ggtitle("Travel Bingo\n")
bingo_items <- read_csv("DATA/bingo_items.csv") %>%
mutate(id = sample(nrow(.)),
x = ceiling(id / 5),
y = id %% 5,
image_url = if_else(id == 12, NA_character_, image_url),
free = if_else(id == 12, "FREE", NA_character_)) %>%
filter(id <= 25)
ggplot(bingo_items, aes(x = x, y = y)) +
geom_text(aes(label = free)) +
geom_image(aes(image = image_url), size = 0.15) +
scale_x_continuous(limits = c(0.5, 5.5)) +
scale_y_continuous(limits = c(-0.8, 4.8)) +
geom_vline(aes(xintercept = 4.5)) +
geom_vline(aes(xintercept = 1.5)) +
geom_vline(aes(xintercept = 2.5)) +
geom_vline(aes(xintercept = 3.5)) +
geom_hline(aes(yintercept = 0.5)) +
geom_hline(aes(yintercept = 1.5)) +
geom_hline(aes(yintercept = 2.5)) +
geom_hline(aes(yintercept = 3.5)) +
theme_void() +
theme(panel.border = element_rect(colour = "black", fill=NA, size=3)) +
ggtitle("Travel Bingo\n")
bingo_items <- read_csv("DATA/bingo_items.csv") %>%
mutate(id = sample(nrow(.)),
x = ceiling(id / 5),
y = id %% 5,
image_url = if_else(id == 12, NA_character_, image_url),
free = if_else(id == 12, "FREE", NA_character_)) %>%
filter(id <= 25)
ggplot(bingo_items, aes(x = x, y = y)) +
geom_text(aes(label = free)) +
geom_image(aes(image = image_url), size = 0.15) +
scale_x_continuous(limits = c(0.5, 5.5)) +
scale_y_continuous(limits = c(-0.8, 4.8)) +
geom_vline(aes(xintercept = 4.5)) +
geom_vline(aes(xintercept = 1.5)) +
geom_vline(aes(xintercept = 2.5)) +
geom_vline(aes(xintercept = 3.5)) +
geom_hline(aes(yintercept = 0.5)) +
geom_hline(aes(yintercept = 1.5)) +
geom_hline(aes(yintercept = 2.5)) +
geom_hline(aes(yintercept = 3.5)) +
theme_void() +
theme(panel.border = element_rect(colour = "black", fill=NA, size=3)) +
ggtitle("Travel Bingo\n")
library(tidyverse)
library(ggimage)
bingo_items <- read_csv("DATA/bingo_items.csv") %>%
mutate(id = sample(nrow(.)),
x = ceiling(id / 5),
y = id %% 5,
image_url = if_else(id == 12, NA_character_, image_url),
free = if_else(id == 12, "FREE", NA_character_)) %>%
filter(id <= 25)
# image = if_else(item == "motorcycle", paste0("IMAGES/", item, ".png")))
ggplot(bingo_items, aes(x = x, y = y)) +
geom_text(aes(label = free)) +
geom_image(aes(image = image_url), size = 0.15) +
scale_x_continuous(limits = c(0.5, 5.5)) +
scale_y_continuous(limits = c(-0.8, 4.8)) +
geom_vline(aes(xintercept = 4.5)) +
geom_vline(aes(xintercept = 1.5)) +
geom_vline(aes(xintercept = 2.5)) +
geom_vline(aes(xintercept = 3.5)) +
geom_hline(aes(yintercept = 0.5)) +
geom_hline(aes(yintercept = 1.5)) +
geom_hline(aes(yintercept = 2.5)) +
geom_hline(aes(yintercept = 3.5)) +
theme_void() +
theme(panel.border = element_rect(colour = "black", fill=NA, size=3)) +
ggtitle("Travel Bingo\n")
#take # of images square root, and use that as the grid, randomly choosing that many
library(tidyverse)
library(ggimage)
bingo_items <- read_csv("DATA/bingo_items.csv") %>%
mutate(id = sample(nrow(.)),
x = ceiling(id / 5),
y = id %% 5,
image_url = if_else(id == 12, NA_character_, image_url),
free = if_else(id == 12, "FREE", NA_character_)) %>%
filter(id <= 25)
# image = if_else(item == "motorcycle", paste0("IMAGES/", item, ".png")))
ggplot(bingo_items, aes(x = x, y = y)) +
geom_text(aes(label = free)) +
geom_image(aes(image = image_url), size = 0.15) +
scale_x_continuous(limits = c(0.5, 5.5)) +
scale_y_continuous(limits = c(-0.8, 4.8)) +
geom_vline(aes(xintercept = 4.5)) +
geom_vline(aes(xintercept = 1.5)) +
geom_vline(aes(xintercept = 2.5)) +
geom_vline(aes(xintercept = 3.5)) +
geom_hline(aes(yintercept = 0.5)) +
geom_hline(aes(yintercept = 1.5)) +
geom_hline(aes(yintercept = 2.5)) +
geom_hline(aes(yintercept = 3.5)) +
theme_void() +
theme(panel.border = element_rect(colour = "black", fill=NA, size=3)) +
ggtitle("Travel Bingo\n")
#take # of images square root, and use that as the grid, randomly choosing that many
library(tidyverse)
library(ggimage)
bingo_items <- read_csv("DATA/bingo_items.csv") %>%
mutate(id = sample(nrow(.)),
x = ceiling(id / 5),
y = id %% 5,
image_url = if_else(id == 12, NA_character_, image_url),
free = if_else(id == 12, "FREE", NA_character_)) %>%
filter(id <= 25)
# image = if_else(item == "motorcycle", paste0("IMAGES/", item, ".png")))
ggplot(bingo_items, aes(x = x, y = y)) +
geom_text(aes(label = free)) +
geom_image(aes(image = image_url), size = 0.15) +
scale_x_continuous(limits = c(0.5, 5.5)) +
scale_y_continuous(limits = c(-0.8, 4.8)) +
geom_vline(aes(xintercept = 4.5)) +
geom_vline(aes(xintercept = 1.5)) +
geom_vline(aes(xintercept = 2.5)) +
geom_vline(aes(xintercept = 3.5)) +
geom_hline(aes(yintercept = 0.5)) +
geom_hline(aes(yintercept = 1.5)) +
geom_hline(aes(yintercept = 2.5)) +
geom_hline(aes(yintercept = 3.5)) +
theme_void() +
theme(panel.border = element_rect(colour = "black", fill=NA, size=3)) +
ggtitle("Travel Bingo\n")
#take # of images square root, and use that as the grid, randomly choosing that many
library(tidyverse)
library(ggimage)
bingo_items <- read_csv("DATA/bingo_items.csv") %>%
mutate(id = sample(nrow(.)),
x = ceiling(id / 5),
y = id %% 5,
image_url = if_else(id == 12, NA_character_, image_url),
free = if_else(id == 12, "FREE", NA_character_)) %>%
filter(id <= 25)
# image = if_else(item == "motorcycle", paste0("IMAGES/", item, ".png")))
ggplot(bingo_items, aes(x = x, y = y)) +
geom_text(aes(label = free)) +
geom_image(aes(image = image_url), size = 0.15) +
scale_x_continuous(limits = c(0.5, 5.5)) +
scale_y_continuous(limits = c(-0.8, 4.8)) +
geom_vline(aes(xintercept = 4.5)) +
geom_vline(aes(xintercept = 1.5)) +
geom_vline(aes(xintercept = 2.5)) +
geom_vline(aes(xintercept = 3.5)) +
geom_hline(aes(yintercept = 0.5)) +
geom_hline(aes(yintercept = 1.5)) +
geom_hline(aes(yintercept = 2.5)) +
geom_hline(aes(yintercept = 3.5)) +
theme_void() +
theme(panel.border = element_rect(colour = "black", fill=NA, size=3)) +
ggtitle("Travel Bingo\n")
#take # of images square root, and use that as the grid, randomly choosing that many
library(tidyverse)
library(ggimage)
bingo_items <- read_csv("DATA/bingo_items.csv") %>%
mutate(id = sample(nrow(.)), # randomly assign row numbers
x = ceiling(id / 5), # assign to one of 5 columns
y = id %% 5, #assign to one of 5 rows
image_url = if_else(id == 12, NA_character_, image_url), # middle square should have no image
free = if_else(id == 12, "FREE", NA_character_)) %>% # middle square should say FREE
filter(id <= 25) # keep only 25 of the items
ggplot(bingo_items, aes(x = x, y = y)) +
geom_text(aes(label = free)) +
geom_image(aes(image = image_url), size = 0.15) +
scale_x_continuous(limits = c(0.5, 5.5)) +
scale_y_continuous(limits = c(-0.8, 4.8)) +
geom_vline(aes(xintercept = 4.5)) +
geom_vline(aes(xintercept = 1.5)) +
geom_vline(aes(xintercept = 2.5)) +
geom_vline(aes(xintercept = 3.5)) +
geom_hline(aes(yintercept = 0.5)) +
geom_hline(aes(yintercept = 1.5)) +
geom_hline(aes(yintercept = 2.5)) +
geom_hline(aes(yintercept = 3.5)) +
theme_void() +
theme(panel.border = element_rect(colour = "black", fill=NA, size=3)) +
ggtitle("Travel Bingo\n")
blogdown:::new_post_addin()
library(shiny)
?submitButton
runApp('TravelBingo')
runApp('TravelBingo')
?sliderInput
?seed
runApp('TravelBingo')
runApp('TravelBingo')
runApp('TravelBingo')
runApp('TravelBingo')
runApp('TravelBingo')
runApp('TravelBingo')
?downloadButton
?downloadHandler
runApp('TravelBingo')
runApp('TravelBingo')
runApp('TravelBingo')
runApp('TravelBingo')
runApp('TravelBingo')
